
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНачальныеДанные();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеДанные()
	
	ПользовательПоУмолчанию = "ОбменТест_Com";
	ПарольПоУмолчанию		= "Проверка_Com_соединения";
	
	
	//БП30_ФКНТ
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "БП ФКНТ";
	СтрокаТЗ.Сервер 		= "app1cv83sot1";
	СтрокаТЗ.База   		= "fknt30";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);
	
	//ЗУП_Рафарма
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "ЗУП Рафарма";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv02";
	СтрокаТЗ.База   		= "hrm31_rafarma";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);

	//ЗУП_Сотекс
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "ЗУП Сотекс";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv02";
	СтрокаТЗ.База   		= "hrm30_sotex";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);
				
	//ЗУП_ФКНТ
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "ЗУП ФКНТ";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv02";
	СтрокаТЗ.База   		= "hrm30_fknt";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);
	
	//ЗУП_УПП_Анвилаб
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "УПП Анвилаб";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv03";
	СтрокаТЗ.База   		= "anvilab";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);
	
	//УПП_Рафарма
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "УПП Рафарма";
	СтрокаТЗ.Сервер 		= "srv-1c1";
	СтрокаТЗ.База   		= "Farm";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);
		
	//УПП_Сотекс
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "УПП Сотекс";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv03";
	СтрокаТЗ.База   		= "sotex2015";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);

	//УПП_Документооборот
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "Документооборот";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv01";
	СтрокаТЗ.База   		= "EDOCS";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;		
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);
	
	//СЭД
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "СЭД";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv01";
	СтрокаТЗ.База   		= "sed";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);

	//ЭДОР
	СтрокаТЗ = СписокБаз.Добавить();
	СтрокаТЗ.Имя 			= "ЭДОР";
	СтрокаТЗ.Сервер 		= "sot-1c83-srv04";
	СтрокаТЗ.База   		= "edor30";
	СтрокаТЗ.Пользователь 	= ПользовательПоУмолчанию;
	СтрокаТЗ.Пароль 		= ПарольПоУмолчанию;
	//СтрокаТЗ.ЭтоV82 		= Истина;
	СтрокаТЗ.Путь 			= ПолучитьСтрокуСоединения(СтрокаТЗ);

	СписокБаз.Сортировать("Имя");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ПоказатьПароль.Видимость 	= РольДоступна("ПолныеПрава");
	
	Элементы.СписокБазПользователь.Видимость 	= ПоказатьПароль;
	Элементы.СписокБазПароль.Видимость 			= ПоказатьПароль;
	Элементы.СписокБазПуть.Видимость 			= ПоказатьПароль;

КонецПроцедуры


&НаКлиенте
Процедура ПоказатьПарольПриИзменении(Элемент)
	
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура СписокБазПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СтрокаТЗ = Элементы.СписокБаз.ТекущиеДанные;
	
	Если СтрокаТЗ = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтрокаТЗ.Путь	= ПолучитьСтрокуСоединения(СтрокаТЗ);

КонецПроцедуры


//***********************ПРОВЕРКА СОЕДИНЕНИЙ***********************************

&НаКлиенте
Процедура ПроверкаСозданияСОМОбъектов(Команда)
	ТекстовоеПоле.Очистить();
	
	Если ВключатьПроверкуНаКлиенте Тогда
		ПроверкаСозданияСОМОбъектовНаКлиенте();
	КонецЕсли; 
	
	ПроверкаСозданияСОМОбъектовНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСозданияСОМОбъектовНаКлиенте()
	
	ТекстовоеПоле.ДобавитьСтроку("Проверка создания СОМ-объектов на КЛИЕНТЕ базы "+СтрокаСоединенияИнформационнойБазы()+Символы.ПС);
	Если Объект82 Тогда
		Попытка
			КомКонект82 = Новый COMОбъект("V82.COMConnector");
			ТекстовоеПоле.ДобавитьСтроку("   Создание COMОбъект для 8.2 прошло успешно!");
		Исключение
			ТекстовоеПоле.ДобавитьСтроку(ОписаниеОшибки());
		КонецПопытки;
		ТекстовоеПоле.ДобавитьСтроку("-----------------------------------------------------------------------"+Символы.ПС);
	КонецЕсли;	
	
	Если Объект83 Тогда
		Попытка
			КомКонект83 = Новый COMОбъект("V83.COMConnector");
			ТекстовоеПоле.ДобавитьСтроку("   Создание COMОбъект для 8.3 прошло успешно!");
		Исключение
			ТекстовоеПоле.ДобавитьСтроку(ОписаниеОшибки());
		КонецПопытки;
		ТекстовоеПоле.ДобавитьСтроку("-----------------------------------------------------------------------"+Символы.ПС);
	КонецЕсли;
	
	КомКонект82 = Неопределено;
	КомКонект83 = Неопределено;
	

КонецПроцедуры

&НаСервере
Процедура ПроверкаСозданияСОМОбъектовНаСервере()
	
	ТекстовоеПоле.ДобавитьСтроку("Проверка создания СОМ-объектов на СЕРВЕРЕ базы "+СтрокаСоединенияИнформационнойБазы()+Символы.ПС);
	Если Объект82 Тогда
		Попытка
			КомКонект82 = Новый COMОбъект("V82.COMConnector");
			ТекстовоеПоле.ДобавитьСтроку("   Создание COMОбъект для 8.2 прошло успешно!");
		Исключение
			ТекстовоеПоле.ДобавитьСтроку(ОписаниеОшибки());
		КонецПопытки;
		ТекстовоеПоле.ДобавитьСтроку("-----------------------------------------------------------------------"+Символы.ПС);
	КонецЕсли;	
	
	Если Объект83 Тогда
		Попытка
			КомКонект83 = Новый COMОбъект("V83.COMConnector");
			ТекстовоеПоле.ДобавитьСтроку("   Создание COMОбъект для 8.3 прошло успешно!");
		Исключение
			ТекстовоеПоле.ДобавитьСтроку(ОписаниеОшибки());
		КонецПопытки;
		ТекстовоеПоле.ДобавитьСтроку("-----------------------------------------------------------------------"+Символы.ПС);
	КонецЕсли;
	
	КомКонект82 = Неопределено;
	КомКонект83 = Неопределено;
	
КонецПроцедуры



&НаКлиенте
Процедура ПроверкаКомСоединения(Команда)
	
	ТекстовоеПоле.Очистить();
	ТекВремя = Строка(ТекущаяДата());
	
	Если ВключатьПроверкуНаКлиенте Тогда
		ТекстовоеПоле.ДобавитьСтроку(ТекВремя + " НАЧАЛО проверки соединений на КЛИЕНТЕ" + Символы.ПС);
		ТекстовоеПоле.ДобавитьСтроку(" Подключаемся с базы: "+ СтрокаСоединенияИнформационнойБазы());
		
		ПроверкаКомСоединенияНаКлиенте();
		
		ТекстовоеПоле.ДобавитьСтроку(Символы.ПС + "КОНЕЦ проверки соединений на КЛИЕНТЕ" + Символы.ПС);
	Иначе
		ТекстовоеПоле.ДобавитьСтроку(ТекВремя + " НАЧАЛО проверки соединений на СЕРВЕРЕ" + Символы.ПС);
		ТекстовоеПоле.ДобавитьСтроку(" Подключаемся с базы: "+ СтрокаСоединенияИнформационнойБазы());
		
		ПроверкаКомСоединенияНаСервере();
		
		ТекстовоеПоле.ДобавитьСтроку(Символы.ПС + "КОНЕЦ проверки соединений на СЕРВЕРЕ");
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Функция ПроверкаКомСоединенияНаКлиенте()

	Соединение 			= Неопределено;
	БазаИсточник		= Неопределено;
	Ном = 0;
	
	Для каждого БазаСоединения Из СписокБаз Цикл
		
		Если НЕ БазаСоединения.Флаг Тогда
			Продолжить;
		КонецЕсли; 
		
		Соединение 			= Неопределено;
		БазаИсточник		= Неопределено;

		Ном = Ном + 1;
		ПутьКБазе        = "Srvr=" + БазаСоединения.Сервер + ";Ref=" + БазаСоединения.База;
		СтрокаСообщения = "   " + Строка(Ном) +  ". Подключение к базе: " +  ПутьКБазе;
	    ТекстовоеПоле.ДобавитьСтроку(СтрокаСообщения);

		Соединение = ПолучитьСоединение(БазаСоединения.ЭтоV82, ТекстовоеПоле);

		Если Соединение = Неопределено Тогда
			СтрокаСообщения = "   " + " - При подключении к базе возникла ошибка";
		Иначе 
			СтрокаСообщения = ПровестиПодключениеПоCom(Соединение, БазаСоединения.Путь, ПутьКБазе, БазаИсточник);
		КонецЕсли; 
		
		ТекстовоеПоле.ДобавитьСтроку(СтрокаСообщения);
		
	КонецЦикла;	

	
КонецФункции	

&НаСервере
Функция ПроверкаКомСоединенияНаСервере()
	
	Соединение 			= Неопределено;
	БазаИсточник		= Неопределено;
	Ном = 0;
	
	Для каждого БазаСоединения Из СписокБаз Цикл
		
		Если НЕ БазаСоединения.Флаг Тогда
			Продолжить;
		КонецЕсли; 
		
		Соединение 			= Неопределено;
		БазаИсточник		= Неопределено;

		Ном = Ном + 1;
		ПутьКБазе        = "Srvr=" + БазаСоединения.Сервер + ";Ref=" + БазаСоединения.База;
		СтрокаСообщения = "   " + Строка(Ном) +  ". Подключение к базе: " +  ПутьКБазе;
	    ТекстовоеПоле.ДобавитьСтроку(СтрокаСообщения);

		Соединение = ПолучитьСоединение(БазаСоединения.ЭтоV82, ТекстовоеПоле);

		Если Соединение = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		СтрокаСообщения = ПровестиПодключениеПоCom(Соединение, БазаСоединения.Путь, ПутьКБазе, БазаИсточник);
		
		ТекстовоеПоле.ДобавитьСтроку(СтрокаСообщения);
		
	КонецЦикла;	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПровестиПодключениеПоCom(Соединение, Путь, ПутьКБазе, БазаИсточник)
	
	Попытка
		БазаИсточник = Соединение.Connect(Путь);
		
		Если НЕ БазаИсточник = Неопределено Тогда
			Возврат "   " + " + Подлючение прошло успешно";
		Иначе
			Возврат "   " + " - Подключение к базе выполнено, но возвращен тип соединения НЕОПРЕДЕЛЕНО!";				
		КонецЕсли;
		
	Исключение
		Возврат "   " + " - При подключении к базе возникла ошибка: " + ОписаниеОшибки();
	КонецПопытки;

КонецФункции	

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСоединение(V82 = Ложь, ТекстовоеПоле)
	
	Соединение = Неопределено;
	
	Попытка
		Если V82 Тогда
			Соединение = Новый COMObject("V82.COMConnector");
		Иначе 
			Соединение = Новый COMObject("V83.COMConnector");
		КонецЕсли;
	Исключение
		ТекстовоеПоле.ДобавитьСтроку("   " + " - При подключении к базе возникла ошибка:" + Символы.ПС + "   "+ ОписаниеОшибки());
		//ТекстовоеПоле.ДобавитьСтроку(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтрокуСоединения(БазаСоединения)
	
	Возврат "Srvr=" + БазаСоединения.Сервер + ";Ref=" + БазаСоединения.База + ";Usr=" + БазаСоединения.Пользователь + ";Pwd=" + БазаСоединения.Пароль;
	
КонецФункции

////**************************************************************



//*************ПРОВЕРКА РАБОТЫ С ФАЙЛАМИ***********************************

//Excel
&НаКлиенте
Процедура ПроверкаРаботыСОбъектами(Команда)
	
	ТекстовоеПоле.Очистить();
	
	Если ВключатьПроверкуНаКлиенте Тогда
		ПроверкаРаботыСОбъектамиНаКлиенте();
	КонецЕсли; 
	
	ПроверкаРаботыСОбъектамиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаРаботыСОбъектамиНаКлиенте()
	
	Попытка
		ТекстовоеПоле.ДобавитьСтроку("КЛИЕНТ: Проверка создания СОМ-объекта ""Excel.Application""");
		Excel = Новый COMОбъект("Excel.Application");
		ТекстовоеПоле.ДобавитьСтроку("     Создание СОМ-объекта ""Excel.Application"" прошло успешно!");
		
		//Excel.WorkBooks.Open("");
	Исключение
		ТекстовоеПоле.ДобавитьСтроку(ОписаниеОшибки());
	КонецПопытки;
	
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаРаботыСОбъектамиНаСервере()
	
	Попытка
		ТекстовоеПоле.ДобавитьСтроку("СЕРВЕР: Проверка создания СОМ-объекта ""Excel.Application""");
		Excel = Новый COMОбъект("Excel.Application");
		ТекстовоеПоле.ДобавитьСтроку("     Создание СОМ-объекта ""Excel.Application"" прошло успешно!");
		
		//Excel.WorkBooks.Open("");
	Исключение
		ТекстовоеПоле.ДобавитьСтроку(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры




