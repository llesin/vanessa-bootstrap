
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//"Обмен_Com";
	//"LMV7dEsyKiKp";
	//"SOT-1C83-SRV03.corp.sotex.local"   
	//"/ANVILAB/hs/ExchangeData/EmployeeList/"
	
	 УправлениеВидимостью();
	 
КонецПроцедуры


&НаКлиенте
Процедура Тест(Команда)
	
	Если Вручную Тогда
		ПрочитатьДанныеИзВнешнейБазыПоНТТР_Соединению_ВРучную();
	Иначе  
		Если НЕ ЗначениеЗаполнено(Объект.ОбменПоHTTP) Тогда
			Сообщить("Заполните обмен поле ОбменПоHTTP");
			Возврат;
		КонецЕсли; 
		ПрочитатьДанныеИзВнешнейБазыПоНТТР_Соединению();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеИзВнешнейБазыПоНТТР_Соединению()
	
	//Параметры подключения
	Аутентификация 				= Новый Структура("Пользователь, Пароль", Объект.ОбменПоHTTP.Пользователь, Объект.ОбменПоHTTP.Пароль);
	ПараметрыПреобразованияJSON = Новый Структура("ПрочитатьВСоответствие", Ложь);
	ДополнительныеПараметры 	= Новый Структура("Аутентификация, Таймаут, ПараметрыПреобразованияJSON", Аутентификация, 30, ПараметрыПреобразованияJSON);

	Попытка
		Ответ = лл_КоннекторHTTP.Get(Объект.ОбменПоHTTP.URL,,ДополнительныеПараметры); 	
		
		Сообщить(СтрШаблон("Статус: %1, Код ответа: %2. ", ?(Ответ.КодСостояния = 200, "Успешно","Не успешно"), Ответ.КодСостояния));
	Исключение
		Сообщить(СтрШаблон("Статус: %1, Описание ошибки: %2. ", "Не успешно", ОписаниеОшибки()));
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеИзВнешнейБазыПоНТТР_Соединению_ВРучную()
	
	ДанныеДляПодключения = ПолучитьДанныеДляПодключения();

	Попытка
		HTTPСоединение = Новый HTTPСоединение(
											  ДанныеДляПодключения.Сервер, 
											  ДанныеДляПодключения.Порт, 
											  ДанныеДляПодключения.Пользователь, 
											  ДанныеДляПодключения.Пароль, 
											  Неопределено, 
											  60, 
											  Неопределено);
				
		HTTPЗапрос = Новый HTTPЗапрос(ДанныеДляПодключения.URL); 
		HTTPЗапрос.Заголовки.Вставить("Content-type", "application/json");
		
		//Ответ = HTTPСоединение.Получить(HTTPЗапрос);
		Ответ = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);

		Сообщить(СтрШаблон("Статус: %1, Код ответа: %2. ", ?(Ответ.КодСостояния = 200, "Успешно","Не успешно"), Ответ.КодСостояния));
	Исключение
		Сообщить(СтрШаблон("Статус: %1, Описание ошибки: %2. ", "Не успешно", ОписаниеОшибки()));
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляПодключения()
	
	ДанныеДляПодключения = Новый Структура("Сервер, URL, Пользователь, Пароль, Порт");
	ДанныеДляПодключения.Сервер		 	= Объект.Сервер;
	ДанныеДляПодключения.URL 			= Объект.URL;
	ДанныеДляПодключения.Пользователь 	= Объект.Пользователь;
	ДанныеДляПодключения.Пароль 		= Объект.Пароль;
	ДанныеДляПодключения.Порт 			= ?(ЗначениеЗаполнено(Объект.Порт), Объект.Порт, 80);
	
	Возврат ДанныеДляПодключения;	
	
КонецФункции
  
&НаКлиенте
Процедура ВручнуюПриИзменении(Элемент)
	
	УправлениеВидимостью();

КонецПроцедуры

Процедура УправлениеВидимостью()
	
	Элементы.ГруппаПоСправочнику.Видимость 	= НЕ Вручную;
	Элементы.ГруппаРучная.Видимость 		= Вручную;
		
КонецПроцедуры
 
